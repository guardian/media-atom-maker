{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "GuardianIP": {
            "Description": "Ip range for the office",
            "Type": "String",
            "Default": "77.91.248.0/21"
        },
        "SSLCertificateId": {
            "Description": "ARN of the SSL certificate",
            "Type": "String"
        },
        "AMI": {
            "Type": "String"
        },
        "Stage": {
            "Type": "String",
            "AllowedValues": [
                "PROD",
                "CODE"
            ]
        },
        "GithubTeamName": {
            "Description": "Github team name, used for giving ssh access to members of the team.",
            "Type": "String",
            "Default": "Editorial-Tools-SSHAccess"
        },
        "KinesisStreamPrefix": {
            "Description": "Kinesis stream name prefix",
            "Type": "String",
            "Default": "content-atom-events"
        },
        "ContentAtomArn": {
            "Description": "ARN of Content Atom kinesis stream Cross Account role",
            "Type": "String"
        }
    },
    "Resources": {
        "MediaMakerInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "DistributionRole"
                    }
                ]
            }
        },
        "SSHSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow SSH access from the office",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "GuardianIP"
                        }
                    }
                ]
            }
        },
        "DistributionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "root",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": [
                                        "arn:aws:s3:::atom-maker-dist/*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:DescribeTags"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": ["sts:AssumeRole"],
                                    "Resource": { "Ref": "ContentAtomArn" }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "GetTeamKeysPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "GetTeamKeysPolicy",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Resource": [
                                "arn:aws:s3:::github-team-keys/*"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:ListBucket"
                            ],
                            "Resource": "arn:aws:s3:::github-team-keys"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "DistributionRole"
                    }
                ]
            }
        },
        "LoadBalancerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "application load balancer",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "AppServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Application servers",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 9000,
                        "ToPort": 9000,
                        "SourceSecurityGroupName": {
                            "Ref": "LoadBalancerSecurityGroup"
                        }
                    }
                ]
            }
        },
        "MediaAtomMakerLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "CrossZone": true,
                "AvailabilityZones": {
                    "Fn::GetAZs": ""
                },
                "SecurityGroups": [
                    {
                        "Fn::GetAtt": [
                            "LoadBalancerSecurityGroup",
                            "GroupId"
                        ]
                    }
                ],
                "HealthCheck": {
                    "HealthyThreshold": "2",
                    "Interval": "30",
                    "Target": "HTTP:9000/healthcheck",
                    "Timeout": "5",
                    "UnhealthyThreshold": "2"
                },
                "Listeners": [
                    {
                        "LoadBalancerPort": "80",
                        "InstancePort": "9000",
                        "Protocol": "HTTP"
                    },
                    {
                        "LoadBalancerPort": "443",
                        "InstancePort": "9000",
                        "Protocol": "HTTPS",
                        "SSLCertificateId": {
                            "Ref": "SSLCertificateId"
                        }
                    }
                ]
            }
        },
        "MediaAtomLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Ref": "AMI"
                },
                "SecurityGroups": [
                    {
                        "Fn::GetAtt": [
                            "AppServerSecurityGroup",
                            "GroupId"
                        ]
                    },
                    {
                        "Fn::GetAtt": [
                            "SSHSecurityGroup",
                            "GroupId"
                        ]
                    }
                ],
                "InstanceType": "m3.medium",
                "IamInstanceProfile": {
                    "Ref": "MediaMakerInstanceProfile"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ev\n",
                                "apt-get -y update\n",
                                "apt-get -y upgrade\n",
                                "/opt/features/native-packager/install.sh -b atom-maker-dist -a media-atom-maker -t tgz\n",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "/opt/features/ssh-keys/initialise-keys-and-cron-job.sh -l -b github-team-keys -t ",
                                            {
                                                "Ref": "GithubTeamName"
                                            },
                                            " || true\n"
                                        ]
                                    ]
                                },
                                "aws s3 cp 's3://atom-maker-dist/conf/media-atom-maker.",
                                {
                                    "Ref": "Stage"
                                },
                                ".application.conf' ",
                                "/home/media-service/media-atom-maker/conf/application.conf\n",

                                "cat >> /home/media-service/media-atom-maker/conf/application.conf<<'EOF'\n",
                                "aws.dynamo.tableName=", { "Ref": "MediaAtomsDynamoTable" }, "\n",
                                "EOF\n",

                                "systemctl start media-atom-maker\n"
                            ]
                        ]
                    }
                }
            }
        },
        "MediaAtomAutoscalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": [
                    "eu-west-1c",
                    "eu-west-1a",
                    "eu-west-1b"
                ],
                "LaunchConfigurationName": {
                    "Ref": "MediaAtomLaunchConfig"
                },
                "MinSize": 1,
                "MaxSize": 2,
                "DesiredCapacity": 1,
                "Cooldown": "180",
                "HealthCheckType": "ELB",
                "HealthCheckGracePeriod": 300,
                "LoadBalancerNames": [
                    {
                        "Ref": "MediaAtomMakerLoadBalancer"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Stage",
                        "Value": {
                            "Ref": "Stage"
                        },
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "Stack",
                        "Value": "media-service",
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "App",
                        "Value": "media-atom-maker",
                        "PropagateAtLaunch": "true"
                    }
                ]
            }
        },
        "MediaAtomsDynamoTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "10",
                    "WriteCapacityUnits": "5"
                }
            }
        },
        "DynamoDBTablePolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "MediaAtomMakerDynamoDBPolicy",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [ "dynamodb:*" ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/", {"Ref": "MediaAtomsDynamoTable"} ] ] }
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "DistributionRole"
                    }
                ]
            }
        },
        "PanDomainPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "PanDomainPolicy",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": ["s3:GetObject"],
                            "Resource": ["arn:aws:s3:::pan-domain-auth-settings/*"]
                        }
                    ]
                },
                "Roles": [{"Ref": "DistributionRole"}]
            }
        }
    }
}
