AWSTemplateFormatVersion: '2010-09-09'
Description: "Media atom maker development"
Parameters:
  Domain:
    Description: "The domain name where the app is running"
    Type: "String"
Resources:
  MediaAtomGroup:
    Type: "AWS::IAM::Group"
    Properties:
      Policies:
        - PolicyName:   "Group-Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: ["dynamodb:*"]
                Resource:
                  - Fn::Join:
                    - ""
                    - ["arn:aws:dynamodb:", {Ref: "AWS::Region"}, ":", {Ref: "AWS::AccountId"}, ":table/", {Ref: "MediaAtomsDynamoTable"}]
              - Effect: "Allow"
                Action: ["dynamodb:*"]
                Resource:
                  - Fn::Join:
                    - ""
                    - ["arn:aws:dynamodb:", {Ref: "AWS::Region"}, ":", {Ref: "AWS::AccountId"}, ":table/", {Ref: "PublishedMediaAtomsDynamoTable"}]
  MediaAtomUser:
    Type: "AWS::IAM::User"
    Properties:
      Path: "/"
      Groups: [{ "Ref": "MediaAtomGroup" }]
  HostKeys:
    Type: "AWS::IAM::AccessKey"
    Properties:
      UserName: {"Ref": "MediaAtomUser"}
      Serial: 2
  MediaAtomsDynamoTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "10"
        WriteCapacityUnits: "5"
  PublishedMediaAtomsDynamoTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "10"
        WriteCapacityUnits: "5"
  AuditMediaAtomMakerDynamoTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "atomId"
          AttributeType: "S"
        - AttributeName: "operation"
          AttributeType: "S"
        - AttributeName: "date"
          AttributeType: "N"
      KeySchema:
        - AttributeName: "atomId"
          KeyType: "HASH"
        - AttributeName: "date"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      GlobalSecondaryIndexes:
        -
          IndexName: "operation-date-index"
          KeySchema:
            -
              AttributeName: "operation"
              KeyType: "HASH"
            -
              AttributeName: "date"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
  UserUploadBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      CorsConfiguration:
        CorsRules:
          -
            AllowedHeaders:
              - "*"
            AllowedMethods:
              - "GET"
              - "PUT"
            AllowedOrigins:
              -
                !Join [ "", [ "https://", { "Ref": "Domain"} ]]
  LimitedUploadRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS:
                !GetAtt MediaAtomUser.Arn
            Action: [ "sts:AssumeRole" ]
      Path: "/"
      Policies:
        -
          PolicyName: "LimitedUploadPolicy"
          PolicyDocument:
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - Fn::Join:
                    - ""
                    - ["arn:aws:s3:::", { "Ref": "UserUploadBucket" }, "/uploads/*"]
Outputs:
  EditsDynamoTable:
    Value:
      Ref: "MediaAtomsDynamoTable"
  PublishedDynamoTable:
    Value:
      Ref: "PublishedMediaAtomsDynamoTable"
  AuditsDynamoTable:
    Value:
      Ref: "AuditMediaAtomMakerDynamoTable"
  AwsId:
    Value:
      Ref: "HostKeys"
  AwsSecret:
    Value:
      Fn::GetAtt: ["HostKeys", "SecretAccessKey"]
  UserUploadBucket:
    Value:
      Ref: "UserUploadBucket"
  UploadRole:
    Value:
      Ref: "LimitedUploadRole"
