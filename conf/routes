GET     /healthcheck                    controllers.MainApp.healthcheck()
GET     /oauthCallback                  controllers.MainApp.oauthCallback()
GET     /atoms                          controllers.MainApp.listAtoms()

GET     /api/atoms                      controllers.Api.listAtoms()
GET     /api/atom/:id                   controllers.Api.getMediaAtom(id)
GET     /api/published-atom/:id         controllers.Api.getPublishedMediaAtom(id)
GET     /api/config-values              controllers.Api.getConfigValues()
POST    /api/atom                       controllers.Api.createMediaAtom()
PUT     /api/atom/:id                   controllers.Api.updateMediaAtom(id)
PUT     /api/atom/:id/asset             controllers.Api.addAsset(id)
PUT     /api/atom/:id/revert/:version   controllers.Api.revertAtom(id, version: Long)

PUT     /api/atom/:id/publish           controllers.Api.publishAtom(id)

POST    /api2/atoms                     controllers.Api2.createMediaAtom
GET     /api2/atoms                     controllers.Api2.getMediaAtoms()
GET     /api2/atoms/:id                 controllers.Api2.getMediaAtom(id)
PUT     /api2/atoms/:id                 controllers.Api2.putMediaAtom(id)
POST    /api2/atoms/:id/assets          controllers.Api2.addAsset(id)
PUT     /api/atom/:id/update-metadata    controllers.Api2.updateMetadata(id)

GET     /api/youtube/categories         controllers.Youtube.listCategories()
GET     /api/youtube/channels           controllers.Youtube.listChannels()


# reindex

POST    /reindex-preview                com.gu.atom.play.ReindexController.newPreviewReindexJob()
POST    /reindex-publish                com.gu.atom.play.ReindexController.newPublishedReindexJob()
GET     /reindex-preview                com.gu.atom.play.ReindexController.previewReindexJobStatus()
GET     /reindex-publish                com.gu.atom.play.ReindexController.publishedReindexJobStatus()

#static assets
GET  /assets/*file                      controllers.Assets.versioned(path="/public", file)

# Auth
GET  /reauth                            controllers.VideoUIApp.reauth

#video specific react frontend
GET /video                              controllers.VideoUIApp.index(id = "")
GET /video/videos                       controllers.VideoUIApp.index(id = "")
GET /video/videos/:id                   controllers.VideoUIApp.index(id)

#Support
GET /support/previewCapi/*path          controllers.Support.previewCapiProxy(path: String)
